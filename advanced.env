# IMPORTANT: this is a sample env file with the setup used for the default simple
#            docker build. To adjust the build settings you can copy it to ./.env and
#            make your desired changes before running
#            make init && make build

# The build type specifies the version of MiGrid that should be build
# Fow now, the following types are supported.
# {basic,advanced}
# IMPORTANT: no build difference so we just reuse basic and rely on profiles!
#BUILD_TYPE=advanced
BUILD_TYPE=basic

# Which target system is the image being generated for
# {development, production}
BUILD_TARGET=development

# The domain in which the instance should be accessible
DOMAIN=migrid.test
WILDCARD_DOMAIN=*.migrid.test
PUBLIC_DOMAIN=www.migrid.test
MIGCERT_DOMAIN=
EXTCERT_DOMAIN=
MIGOID_DOMAIN=ext.migrid.test
EXTOID_DOMAIN=
EXTOIDC_DOMAIN=
SID_DOMAIN=sid.migrid.test
IO_DOMAIN=io.migrid.test
OPENID_DOMAIN=ext.migrid.test
FTPS_DOMAIN=io.migrid.test
SFTP_DOMAIN=io.migrid.test
WEBDAVS_DOMAIN=io.migrid.test
EXT_OID_PROVIDER=unset
PUBLIC_HTTP_PORT=80
PUBLIC_HTTPS_PORT=444
MIGCERT_HTTPS_PORT=446
EXTCERT_HTTPS_PORT=447
MIGOID_HTTPS_PORT=443
EXTOID_HTTPS_PORT=445
EXTOIDC_HTTPS_PORT=449
SID_HTTPS_PORT=448
SFTP_PORT=2222
SFTP_SUBSYS_PORT=22222

# Which site setup flavor to emulate regarding skin, etc.
# {migrid, idmc, erda, sif}
EMULATE_FLAVOR=migrid
# and the corresponding FQDN used e.g. in that flavor index-FQDN.html
EMULATE_FQDN=migrid.org
SKIN_SUFFIX=basic

# Site settings
ENABLE_OPENID=True
ENABLE_SFTP=True
ENABLE_SFTP_SUSBSYS=True
ENABLE_DAVS=True
ENABLE_FTPS=True
ENABLE_SHARELINKS=True
ENABLE_TRANSFERS=True
ENABLE_DUPLICATI=True
ENABLE_SEAFILE=False
ENABLE_SANDBOXES=False
ENABLE_VMACHINES=False
ENABLE_CRONTAB=True
ENABLE_JOBS=True
ENABLE_RESOURCES=True
ENABLE_EVENTS=True
ENABLE_FREEZE=False
ENABLE_IMNOTIFY=False
ENABLE_NOTIFY=True
ENABLE_PREVIEW=False
ENABLE_WORKFLOWS=False
ENABLE_VERIFY_CERTS=True
ENABLE_JUPYTER=True
ENABLE_GDP=False
PUBKEY_FROM_DNS=False

SIGNUP_METHODS=migoid
LOGIN_METHODS=migoid
USER_INTERFACES=V3

# Which svn repo and version of migrid should be used
MIG_SVN_REPO=https://svn.code.sf.net/p/migrid/code/trunk
MIG_SVN_REV=5349
#MIG_SVN_REV=HEAD

# Which git repo and version of migrid should be used
MIG_GIT_REPO=https://github.com/ucphhpc/migrid-sync.git
#MIG_GIT_BRANCH=master
#MIG_GIT_BRANCH=edge
#MIG_GIT_REV=2eeb11c4107c75b2d7dd1f0dad37aa853fbc767b
MIG_GIT_BRANCH=experimental
MIG_GIT_REV=0e97c65d9ab3bd551ef8161c4473231c1c3552f6
#MIG_GIT_REV=HEAD

# Run migrid IO daemons from individual isolated containers
COMPOSE_PROFILES=multi

# Toggle experimental Python3 support
#WITH_PY3=no
WITH_PY3=yes

# Toggle experimental git support
#WITH_GIT=no
WITH_GIT=yes

# Which timezone should the service use
TZ=Europe/Copenhagen

# The URL of the of designated jupyter services
# The url is prefixed by the name of the service itself
JUPYTER_SERVICES="dag.http://dag.test"

# The description associated with each jupyter service
# The key is the name of the service it describes
JUPYTER_SERVICES_DESC="{'dag': '/home/mig/state/wwwpublic/dag_desc.html'}"

# Jupyterhub variables
# Required when the 'auth_state' flag is enabled
# means that the 'hub/setup_jup_crypt_secrets.sh script
# must be sourced before the stack is deployed
# https://jupyterhub.readthedocs.io/en/stable/reference/authenticators.html
JUPYTERHUB_CRYPT_KEY=${JUPYTERHUB_CRYPT_KEY}

# https://jupyterhub.readthedocs.io/en/stable/getting-started/security-basics.html#generating-and-storing-as-an-environment-variable
# Used by the proxy and JupyterHub for authentication
CONFIGPROXY_AUTH_TOKEN=${CONFIGPROXY_AUTH_TOKEN}
